LogBot is an iOS app that helps users keep track of their belongings. The application was built using Exponent and React Native, so the project was written completely in JavaScript--because React Native is a library that can be integrated directly into XCode and Android Studio projects, utilizing JavaScript to create user interfaces. We chose to use Exponent because it is a tool that facilitates development even more than React Native, as it allowed all functionality to be written in JavaScript without any need for Xcode/Android Studio. 
Although no member of our team had any experience with mobile development before this project, we were able to learn to use the React Native library, became more familiar with JavaScript, and found the app examples provided by Exponent particularly helpful. In the project, we worked on HomeScreen.js, SettingsScreen.js, RootNavigation.js, Router.js, Input.js, and List.js.
One of the most critical features of this app is its ability to store a user's items and reload them once the user reopens the app. In order to accomplish this, we used AsyncStorage, provided by the React Native library, which stores key-value pairs. We assigned each list item a unique ID prop, randomly generated from a list of 5000 numbers, which we then used as a key to access the item object upon the app restarting. When the user adds an item, the item is saved to AsyncStorage using the built-in setItem function, and when the user removes an item, the item is removed from AsyncStorage using the removeItem function, which takes the key of the item as an input. Each item object also contains location, timestamp, and name props. The location and timestamp props are displayed on markers on the map.
The map feature was built using React Native’s MapView module. This allowed us to create a full map with only a few lines of code--the MapView component and a couple of props specifying its initial region and that it should show a user’s location. Rendering the pins of the map was a little more difficult. To integrate the entire app well, we chose to use an array of objects to keep track of users’ items. Each object represented one item, and stored information including the item’s name, location, and timestamp. Our aim was to add a pin on the map for each item, by using the object’s longitude and latitude. This is where one of our greatest difficulties lied. We knew we would need a for loop to implement this, but since we were not familiar with React syntax, we struggled to complete this task. 
We began by writing a function that returned one MapView.Marker component for each object in the array. Because we were using React Native though, the function had to return a React Native object to be valid, so our code ended up really messy and looking like this: 
	function makePins() {
	    var result = []
	    for (object in array) {
result.push(<MapView.Marker prop={} prop={} />)
    return <MapView prop={} prop={}> {result} </MapView>


Clearly, this code was not very clean, so we knew we had to make a change. After quite a bit of searching on the web, we were able to refine our code greatly. We learned about JavaScript’s map() method, which took care of iterating through the array for us, and allowed us to use clean components to render our app’s Map screen. 
We wrote the code for rendering the map pins by hard coding an array into the Map screen’s file, so our next great challenge lied in rendering map pins based on the actual array of objects keeping track of a user’s items. This was especially difficult because of the way we had originally written the code for the Items List screen; it used state to store an array of strings, which was then used to render the list of items. We thought we could easily fix this by making the app return an object with a ‘name’ key instead of a string alone, but as it turned out, React Native does not allow users to return objects. We ended up fixing this by creating a new object each time an item was added and saving that item on an array rather than on state.
Ultimately, this CS50 Final Project was an incredible learning opportunity for the three of us, introducing us to concepts we had never explored before, like mobile development, React Native, and Exponent.